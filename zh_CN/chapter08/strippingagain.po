# Linux From Scratch 移除调试符号页面的中文翻译
# This file is distributed under the same license as the Linux From Scratch
# book.
# Xi Ruoyao <xry111@mengyan1223.wang>, 2021
#
msgid ""
msgstr ""
"Project-Id-Version: Linux From Scratch 11.0\n"
"Report-Msgid-Bugs-To: lfs-dev@lists.linuxfromscratch.org\n"
"POT-Creation-Date: 2021-08-06 13:50+0800\n"
"PO-Revision-Date: 2021-08-06 13:50+0800\n"
"Last-Translator: Xi Ruoyao <xry111@mengyan1223.wang>\n"
"Language-Team: None <noreply@mengyan1223.wang>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Bugs: https://github.com/xry111/lfs-book-i18n/issues\n"
"X-Pootle-Revision: 9999999\n"
"X-Pootle-Path: /zh_CN/lfs/chapter08/util-linux.po\n"

#. type: Content of: <sect1><title>
msgid "Stripping Again"
msgstr "再次移除调试符号"

#. type: Content of: <sect1><para>
msgid ""
"This section is optional.  If the intended user is not a programmer and does "
"not plan to do any debugging on the system software, the system size can be "
"decreased by about 2 GB by removing the debugging symbols from binaries and "
"libraries. This causes no inconvenience other than not being able to debug "
"the software fully anymore."
msgstr ""
"本节是可选的。如果系统不是为程序员设计的，也没有调试系统软件的计划，可以通过"
"从二进制程序和库移除调试符号，将系统的体积减小约 2 GB。除了无法再调试全部软件"
"外，这不会造成任何不便。"

#. type: Content of: <sect1><para>
msgid ""
"Most people who use the commands mentioned below do not experience any "
"difficulties. However, it is easy to make a typo and render the new system "
"unusable, so before running the <command>strip</command> commands, it is a "
"good idea to make a backup of the LFS system in its current state."
msgstr ""
"大多数使用以下命令的用户不会遇到什么困难。但是，如果打错了命令，很容易导致新"
"系统无法使用，因此在运行 <command>strip</command> 命令前，最好备份 LFS 系统的"
"当前状态。"

#. type: Content of: <sect1><para>
msgid ""
"The debugging symbols for selected libraries are placed in separate files.  "
"This debugging information is needed if running regression tests that use "
"<ulink url='&blfs-book;/general/valgrind.html'>valgrind</ulink> or <ulink "
"url='&blfs-book;/general/gdb.html'>gdb</ulink> later in BLFS."
msgstr ""
"一些库的调试符号需要保存在单独的文件中。之后在 BLFS 中，如果使用 <ulink "
"url='&blfs-book;/general/valgrind.html'>valgrind</ulink> 或 <ulink "
"url='&blfs-book;/general/gdb.html'>gdb</ulink> 运行退化测试，则需要这些调试信"
"息的存在。"

#. type: Content of: <sect1><para>
msgid ""
"Note that <command>strip</command> will overwrite the binary or library file "
"it is processing.  This may crash the processes using code or data from the "
"file.  If the process running <command>strip</command> itself is affected, "
"the binary or library being stripped may be destroyed.  This may make the "
"system completely unusable.  To avoid it, we'll copy some libraries and "
"binaries into <filename class=\"directory\">/tmp</filename>, strip them "
"there, and install them back with the <command>install</command> command.  "
"Read the related entry in <xref linkend=\"pkgmgmt-upgrade-issues\"/> for the "
"rationale to use the <command>install</command> command here."
msgstr ""
"需要注意的是，<command>strip</command> 命令会覆盖它正在处理的二进制程序或库文"
"件。这可能导致正在使用该文件中代码或数据的进程崩溃。如果运行 <command>strip</"
"command> 本身的进程受到影响，则可能导致正在被处理的程序或库完全损坏。这可能导"
"致系统完全不可用。为了避免这种情况，将一些库和程序复制到 <filename class="
"\"directory\">/tmp</filename> 中，在那里移除调试符号，再使用 "
"<command>install</command> 命令将它们安装回原位置。<xref linkend=\"pkgmgmt-"
"upgrade-issues\"/> 中的相关条目介绍了使用 <command>install</command> 命令的原"
"因。"

#. type: Content of: <sect1><note><para>
msgid ""
"The ELF loader's name is ld-linux-x86-64.so.2 on 64-bit systems and ld-linux."
"so.2 on 32-bit systems.  The contruct below selects the correct name for the "
"current architecture."
msgstr ""
"ELF 加载器的文件名在 64 位系统是 ld-linux-x86-64.so.2，在 32 位系统是 ld-"
"linux.so.2。下面的命令会为当前架构选择正确的文件名。"

#.  also of interest are libgfortan, libgo, libgomp, and libobjc from GCC 
#. <screen>
#. <userinput>save_lib="ld-2.25.so libc-2.25.so libpthread-2.25.so libthread_db-1.0.so"
#. type: Content of: <sect1><screen>
#, no-wrap
msgid ""
"<userinput>save_usrlib=\"$(cd /usr/lib; ls ld_linux*)\n"
"             libc.so.6\n"
"             libthread_db.so.1\n"
"             libquadmath.so.&libquadmath-version; \n"
"             libstdc++.so.&libstdcpp-version;\n"
"             libitm.so.&libitm-version; \n"
"             libatomic.so.&libatomic-version;\" \n"
"\n"
"cd /usr/lib\n"
"\n"
"for LIB in $save_usrlib; do\n"
"    objcopy --only-keep-debug $LIB $LIB.dbg\n"
"    cp $LIB /tmp/$LIB\n"
"    strip --strip-unneeded /tmp/$LIB\n"
"    objcopy --add-gnu-debuglink=$LIB.dbg /tmp/$LIB\n"
"    install -vm755 /tmp/$LIB /usr/lib\n"
"    rm /tmp/$LIB\n"
"done\n"
"\n"
"online_usrbin=\"bash find strip\"\n"
"online_usrlib=\"libbfd-&binutils-version;.so\n"
"               libhistory.so.&readline-version;\n"
"               libncursesw.so.&ncurses-version;\n"
"               libm.so.6\n"
"               libreadline.so.&readline-version;\n"
"               libz.so.&zlib-version;\n"
"               $(cd /usr/lib; find libnss*.so* -type f)\"\n"
"\n"
"for BIN in $online_usrbin; do\n"
"    cp /usr/bin/$BIN /tmp/$BIN\n"
"    strip --strip-unneeded /tmp/$BIN\n"
"    install -vm755 /tmp/$BIN /usr/bin\n"
"    rm /tmp/$BIN\n"
"done\n"
"\n"
"for LIB in $online_usrlib; do\n"
"    cp /usr/lib/$LIB /tmp/$LIB\n"
"    strip --strip-unneeded /tmp/$LIB\n"
"    install -vm755 /tmp/$LIB /usr/lib\n"
"    rm /tmp/$LIB\n"
"done\n"
"\n"
"for i in $(find /usr/lib -type f -name \\*.so* ! -name \\*dbg) \\\n"
"         $(find /usr/lib -type f -name \\*.a)                 \\\n"
"         $(find /usr/{bin,sbin,libexec} -type f); do\n"
"    case \"$online_usrbin $online_usrlib $save_usrlib\" in\n"
"        *$(basename $i)* ) \n"
"            ;;\n"
"        * ) strip --strip-unneeded $i \n"
"            ;;\n"
"    esac\n"
"done\n"
"\n"
"unset BIN LIB save_usrlib online_usrbin online_usrlib\n"
"</userinput>"
msgstr ""
"<userinput>save_usrlib=\"$(cd /usr/lib; ls ld_linux*)\n"
"             libc.so.6\n"
"             libthread_db.so.1\n"
"             libquadmath.so.&libquadmath-version; \n"
"             libstdc++.so.&libstdcpp-version;\n"
"             libitm.so.&libitm-version; \n"
"             libatomic.so.&libatomic-version;\" \n"
"\n"
"cd /usr/lib\n"
"\n"
"for LIB in $save_usrlib; do\n"
"    objcopy --only-keep-debug $LIB $LIB.dbg\n"
"    cp $LIB /tmp/$LIB\n"
"    strip --strip-unneeded /tmp/$LIB\n"
"    objcopy --add-gnu-debuglink=$LIB.dbg /tmp/$LIB\n"
"    install -vm755 /tmp/$LIB /usr/lib\n"
"    rm /tmp/$LIB\n"
"done\n"
"\n"
"online_usrbin=\"bash find strip\"\n"
"online_usrlib=\"libbfd-&binutils-version;.so\n"
"               libhistory.so.&readline-version;\n"
"               libncursesw.so.&ncurses-version;\n"
"               libm.so.6\n"
"               libreadline.so.&readline-version;\n"
"               libz.so.&zlib-version;\n"
"               $(cd /usr/lib; find libnss*.so* -type f)\"\n"
"\n"
"for BIN in $online_usrbin; do\n"
"    cp /usr/bin/$BIN /tmp/$BIN\n"
"    strip --strip-unneeded /tmp/$BIN\n"
"    install -vm755 /tmp/$BIN /usr/bin\n"
"    rm /tmp/$BIN\n"
"done\n"
"\n"
"for LIB in $online_usrlib; do\n"
"    cp /usr/lib/$LIB /tmp/$LIB\n"
"    strip --strip-unneeded /tmp/$LIB\n"
"    install -vm755 /tmp/$LIB /usr/lib\n"
"    rm /tmp/$LIB\n"
"done\n"
"\n"
"for i in $(find /usr/lib -type f -name \\*.so* ! -name \\*dbg) \\\n"
"         $(find /usr/lib -type f -name \\*.a)                 \\\n"
"         $(find /usr/{bin,sbin,libexec} -type f); do\n"
"    case \"$online_usrbin $online_usrlib $save_usrlib\" in\n"
"        *$(basename $i)* ) \n"
"            ;;\n"
"        * ) strip --strip-unneeded $i \n"
"            ;;\n"
"    esac\n"
"done\n"
"\n"
"unset BIN LIB save_usrlib online_usrbin online_usrlib\n"
"</userinput>"

#. type: Content of: <sect1><para>
msgid ""
"A large number of files will be reported as having their file format not "
"recognized. These warnings can be safely ignored. These warnings indicate "
"that those files are scripts instead of binaries."
msgstr ""
"这里会有很多文件被报告为格式无法识别。这些警告可以安全地忽略。它们表明那些文"
"件是脚本文件，而不是二进制文件。"
